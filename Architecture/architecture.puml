@startuml
package Presentation
{
    package View
    {   
        class UserCellView << MonoBehaviour >>
        {
            
        }
        
        class UserLoadButtonView << MonoBehaviour >>
        {
        }
    }
    
    package Presenter
    {
        interface IUserLoadPresenter
        {
            + void LoadUsers()
        }
    
        class UserLoadPresenter << MonoBehaviour >>
        {
        }
        
        UserLoadPresenter -> UserCellView
        UserLoadPresenter -> UserLoadButtonView
    }
}

package Application
{
    package Interactor
    {
        class UserLoadInteractor
        {
        }
    }

    package UseCase
    {
        interface IUserRepository
        {
            + Task<IEnumerable<UserEntity>> GetUsers()
        }
        
        interface IUserLoadUseCase
        {
            + Task<IEnumerable<User>> LoadUsers();
        }
        
        UserLoadInteractor -> IUserRepository
        IUserLoadPresenter <|.. UserLoadPresenter
        UserLoadPresenter -> IUserLoadUseCase
        UserLoadInteractor ..|> IUserLoadUseCase
    }
}

package Domain
{
    package Model
    {
        class User
        {
            id: int
            name: StringReactiveProperty
            isPaid: BoolReactiveProperty
        }
    }
    
    package Translator
    {
        class UserTranslator <<static>>
        {
            + {static} Translate(userEntities: IEnumerable<UserEntity>)
        }
        
        UserLoadInteractor -> UserTranslator
        UserTranslator -> User
    }
}

package Infrastructure
{
    package Repository
    {
        interface IData
        {
            + Task<IEnumerable<UserEntity>> GetUsers()
        }
    
        class UserRepository
        {
        }
        
        IUserRepository <|.. UserRepository
        UserRepository -> IData
    }
    
    package Entity
    {
        class UserEntity
        {
            id: int
            name: string
            isPaid: bool
        }
        
        class UsersEntity
        {
            users: UserEntity[]
        }
        
        UsersEntity -> UserEntity
    }
    
    package Data
    {
        class HerokuData
        {
            
        }
        
        class ScriptableObjectData
        {
        
        }
        
        HerokuData ..|> IData
        ScriptableObjectData ..|> IData
    }
}

@enduml