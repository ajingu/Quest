'ユーザーデータがたまってるデータベースにリクエストしてレスポンスが帰ってきてワールドに変化があるところまで
'clean architectureベースで

@startuml
package Presentation
{
    package View
    {   
        class UserCellView << MonoBehaviour >>
        {
            
        }
        
        class UsersTableView << MonoBehaviour >>
        { 
            
        }
    }
    
    package Presenter
    {
        interface IUserCellView
        {
        
        }
    
        interface IUsersTableView
        {
        
        }
    
        class UserPresenter
        {
            - userUseCase: UserUseCase
            - usersTable: UsersTable
            
            + LoadUsers()
        }
        
        UserPresenter -> IUserCellView
        UserPresenter -> IUsersTableView
        IUserCellView <|.. UserCellView
        IUsersTableView <|.. UsersTableView
    }
}

package Domain
{
    package Model
    {
        class UserModel
        {
            id: int
            name: string
            isPaid: bool
        }
    }
    
    package Translator
    {
        class UserTranslator <<static>>
        {
            + {static} Translate(userEntities: IEnumerable<UserEntity>)
        }
        
        UserTranslator -> UserModel
    }
    
    package UseCase
    {
        interface IUserPresenter
        {
            
        }
        
        interface IUserRepository
        {
            + UserEntity[] GetUsers()
        }
    
        class UserUseCase
        {
            - userRepository: UserRepository
            + LoadUsers()
        }
        
        UserUseCase -> IUserPresenter
        UserUseCase -> IUserRepository
        UserUseCase -> UserTranslator
        IUserPresenter <|.. UserPresenter
        
        
    }
    
    package Repository
    {
        interface IUserDataStore
        {
        }
    
        class UserRepository
        {
            - userDataStore: UserDataStore
            + GetUsers()
        }
        
        IUserRepository <|.. UserRepository
        UserRepository -> IUserDataStore
    }
}

package Data
{
    package DataStore
    {
        class UserDataStore
        {
            + GetUsers()
        }
        
        IUserDataStore <|.. UserDataStore
    }
    
    package Entity
    {
        class UserEntity << struct >>
        {
            id: int
            name: string
            isPaid: bool
        }
    }
    
    UserDataStore -down-> UserEntity
}

@enduml